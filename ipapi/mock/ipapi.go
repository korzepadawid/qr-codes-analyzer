// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/korzepadawid/qr-codes-analyzer/ipapi (interfaces: Client)

// Package mockipapi is a generated GoMock package.
package mockipapi

import (
	gomock "github.com/golang/mock/gomock"
	ipapi "github.com/korzepadawid/qr-codes-analyzer/ipapi"
	reflect "reflect"
)

// MockClient is a mock of Client interface
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// GetIPDetails mocks base method
func (m *MockClient) GetIPDetails(arg0 ipapi.IPAddr) (*ipapi.IPDetails, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetIPDetails", arg0)
	ret0, _ := ret[0].(*ipapi.IPDetails)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetIPDetails indicates an expected call of GetIPDetails
func (mr *MockClientMockRecorder) GetIPDetails(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIPDetails", reflect.TypeOf((*MockClient)(nil).GetIPDetails), arg0)
}
